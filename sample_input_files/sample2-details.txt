Sample 2: Uses the same graph and same plane constraints with various package data that will give different results.

How these were calculated (2-1 and 2-2):
    Each plane can work for 1440 mins in a day, if all packages arrive at 00:00 then that is the most they can be scheduled to work for this algorithm.
    i.e, 3 planes can take 3 * 1440 mins worth of packages in a day. Then just choose appropriate numbers using this boundary.

package2-1 expected result(ER): Solution found (relatively trivial, all planes need to be used constantly). 
    (62.4 hrs needed) Max: 72hrs

package2-2 expected result(ER): No Solution (testing when there are simply too many packages) for all the planes. 
    (91.2 hrs needed) Max: 72hrs

package2-3 ER: No Solution (has the same data as 2-1 however most of the packages arrive much later, causing the program to fail).

package2-4 ER: No Solution (packages arrive very late and hence starve a package that could have made it in time but there's no plane available).

package2-5 ER: Solution found (similar to 2-4 but it should barely be possible, a plane returns just in time).

package2-6 ER: Solution found (playing with backtracking)
    Explanation: Plane 1 will attempt to take the first pkg1,2,3 departs @ 1759,
    then Plane 2 will take pkg4,5 and departs @ 2100,
    then Plane 3 will take the pkg6 @ 2159 -> pkg 6 & 7 are too big for one plane and require 2 hours to reach their destination,
    Plane 1 and Plane 2 have not returned from their previous hauls and thus pkg7 expires.

    Backtrack start: We start backtracking Plane 3 - no other options
    Next we start backtracking Plane 2 which had pkg4,5.
    pkg4 -> no solution same logic as previous failure

    Next backtrack Plane 1 -> had pkg1,2,3
    Plane 1 -> pkg 1,2 departs @ 1759
    Start loading plane 2 with pkg 3,4,5 departs @2100
    Plane 3 takes pkg6 departs @ 2159   ---Plane 1,2 are still busy
                                        ---Plane 1 returns @ 23:35
                                        ---Plane 2 returns @ 1:40 next day

    Hence we backtrack starting at Plane 3 - no other options
    Next backtrack Plane 2 -> had pkg 3,4,5
    Plane 2 -> pkg 3,4 departs @ 2000
    Plane 3 takes pkg 5,6 departs @ 2159 ---again pkg 7 expires with no plane to take it.

    Backtracking Plane 3 doesn't help
    Backtrack Plane 2 again
    Plane 2 -> pkg 3, departs @ 1759
    Plane 3 takes pkg4,5 departs @ 2100 ---Plane 1 returns @ 00:36 next day
                                        ---Plane 2 returns @ 22:39
                                        ---Plane 3 returns @ 1:40 next day
                                        ---pkg6,7 expires

    Backtracking Plane 3 again doesn't help
    Backtrack plane 2 again - however no other options

    Hence back to Plane 1 -> had pkg1,2
    Then Plane 1 -> pkg1 departs @ 0000    ---Returns @ 04:00
    Plane 1 takes pkg2,3,4,5 departs @2100 --- pkg 3,4,5 expires
    Backtrack Plane 1 -> pkg2,3,4 departs @2000
    Plane 2 -> pkg 5,6 @ 2159              ---pkg 6 expires
    Backtrack Plane 2 -> pkg5 departs @2100
    Plane 3 -> pkg6 departs @2159          ---Plane 1 returns @ 02:12 next day
                                           ---Plane 2 returns @ 01:40 next day
                                           ---pkg7 expires

    Hence backtracking Plane 3 - no options
    Then backtracking Plane 2 - no options
    Plane 1 -> had pkg2,3,4
    Backtrack Plane 1 -> pkg2,3 departs @17:59
    Plane 2 -> pkg4,5 departs @21:00
    Plane 3 -> pkg6 departs @ 21:59 ---Plane 1 returns @ 00:11 next day
                                    ---pkg7 expires again

    Hence backtrack Plane 3 -> no options
    Backtrack Plane 2 -> pkg4, departs @2000
    Plane 3 -> pkg5,6 departs @2159--- pkg6 expires
    Backtrack Plane 3 -> pkg5 departs @2100
                                                ---again pkg6,7 expires

    Backtrack Plane 3 - no options
    Backtrack Plane 2 - no options
    Plane 1 -> had pkg2,3
    Backtrack Plane 1 -> pkg2 departs @1759 ---Returns @2159
    Plane 2 -> pkg3,4,5 departs @2100
    Plane 3 -> pkg6 departs @2159
    Plane 1 -> pkg7 departs @2159

    ***solution reached***

    Plane 1 -> (0000):
        Route: 0 -> 1 -> 2
        Packages: 1
    Plane 1 -> (0400):
        Route: 0 -> 1 -> 3 -> 5
        Packages: 2
    Plane 2 -> (2100):
        Route: 0 -> 1 -> 3 -> 4
        Packages: 3,4,5
    Plane 3 -> (2159):
        Route: 0 -> 1 -> 2
        Packages: 6
    Plane 1 -> (2159):
        Route: 0 -> 1 -> 2
        Packages: 7

    
